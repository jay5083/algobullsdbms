# Generated by Django 5.0.4 on 2024-04-20 06:19

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AlgobullsDivision',
            fields=[
                ('division_name', models.TextField(db_column='Division Name', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Algobulls Division',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('permission_id', models.TextField(db_column='Permission ID', primary_key=True, serialize=False)),
                ('permission_name', models.TextField(blank=True, db_column='Permission Name', null=True)),
            ],
            options={
                'db_table': 'Auth Permission',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AuthRole',
            fields=[
                ('role_id', models.TextField(db_column='Role ID', primary_key=True, serialize=False)),
                ('role_name', models.TextField(blank=True, db_column='Role Name', null=True)),
            ],
            options={
                'db_table': 'Auth Role',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('branch_id', models.TextField(db_column='Branch ID', primary_key=True, serialize=False)),
                ('broker_id', models.TextField(blank=True, db_column='Broker ID', null=True)),
            ],
            options={
                'db_table': 'Branch',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BranchEmployee',
            fields=[
                ('branch_employee_id', models.TextField(db_column='Branch Employee ID', primary_key=True, serialize=False)),
                ('email_id', models.TextField(blank=True, db_column='Email ID', null=True)),
                ('password', models.TextField(blank=True, db_column='Password', null=True)),
                ('name', models.TextField(blank=True, db_column='Name', null=True)),
                ('role', models.TextField(blank=True, db_column='Role', null=True)),
                ('branch_id', models.TextField(blank=True, db_column='Branch ID', null=True)),
            ],
            options={
                'db_table': 'Branch Employee',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Broker',
            fields=[
                ('broker_id', models.TextField(blank=True, db_column='Broker ID', null=True)),
                ('broker_name', models.TextField(db_column='Broker Name', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Broker',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Build',
            fields=[
                ('build_id', models.TextField(db_column='Build ID', primary_key=True, serialize=False)),
                ('strategist_name', models.TextField(blank=True, db_column='Strategist Name', null=True)),
                ('strategist_number', models.TextField(blank=True, db_column='Strategist Number', null=True)),
                ('email_id', models.TextField(blank=True, db_column='Email ID', null=True)),
                ('date', models.TextField(blank=True, db_column='Date', null=True)),
                ('strategy', models.TextField(blank=True, db_column='Strategy', null=True)),
                ('document', models.TextField(blank=True, db_column='Document', null=True)),
                ('payment_date', models.TextField(blank=True, db_column='Payment Date', null=True)),
                ('payment_amount', models.TextField(blank=True, db_column='Payment Amount', null=True)),
                ('delivery_date', models.TextField(blank=True, db_column='Delivery Date', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('status', models.TextField(blank=True, db_column='Status', null=True)),
                ('source', models.TextField(blank=True, db_column='Source', null=True)),
                ('assign_from', models.TextField(blank=True, db_column='Assign From', null=True)),
                ('manage_by', models.TextField(blank=True, db_column='Manage By', null=True)),
            ],
            options={
                'db_table': 'Build',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Strategies',
            fields=[
                ('strategy_id', models.TextField(db_column='Strategy ID', primary_key=True, serialize=False)),
                ('employee_id', models.TextField(blank=True, db_column='Employee ID', null=True)),
                ('name', models.TextField(blank=True, db_column='Name', null=True)),
                ('mobile_number', models.TextField(blank=True, db_column='Mobile Number', null=True)),
                ('broking_house', models.TextField(blank=True, db_column='Broking House', null=True)),
                ('client_id', models.TextField(blank=True, db_column='Client ID', null=True)),
            ],
            options={
                'db_table': 'Strategies',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AlgobullsEmployee',
            fields=[
                ('employee_id', models.TextField(db_column='Employee ID', primary_key=True, serialize=False)),
                ('email_id', models.TextField(blank=True, db_column='Email ID', null=True)),
                ('password', models.TextField(blank=True, db_column='Password', null=True)),
                ('name', models.TextField(blank=True, db_column='Name', null=True)),
                ('division_name', models.ForeignKey(blank=True, db_column='Division Name', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='base.algobullsdivision')),
                ('role', models.ForeignKey(blank=True, db_column='Role', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='base.authrole')),
            ],
            options={
                'db_table': 'Algobulls Employee',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PermissionAccessTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission_id', models.ForeignKey(blank=True, db_column='Permission ID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='base.authpermission')),
                ('role_id', models.ForeignKey(blank=True, db_column='Role ID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='base.authrole')),
            ],
            options={
                'db_table': 'Permission Access Table',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Sales',
            fields=[
                ('lead_id', models.TextField(db_column='Lead ID', primary_key=True, serialize=False)),
                ('broking_id', models.TextField(blank=True, db_column='Broking ID', null=True)),
                ('name', models.TextField(blank=True, db_column='Name', null=True)),
                ('contact_number', models.TextField(blank=True, db_column='Contact Number', null=True)),
                ('email_id', models.TextField(blank=True, db_column='Email ID', null=True)),
                ('source_type', models.TextField(blank=True, db_column='Source Type', null=True)),
                ('category', models.TextField(blank=True, db_column='Category', null=True)),
                ('risk_appetite', models.TextField(blank=True, db_column='Risk Appetite', null=True)),
                ('comments', models.TextField(blank=True, db_column='Comments', null=True)),
                ('amount', models.TextField(blank=True, db_column='Amount', null=True)),
                ('purchase_date', models.TextField(blank=True, db_column='Purchase Date', null=True)),
                ('status', models.TextField(blank=True, db_column='Status', null=True)),
                ('reason_for_dropped', models.TextField(blank=True, db_column='Reason For Dropped', null=True)),
                ('branch_employee_id', models.ForeignKey(blank=True, db_column='Branch Employee ID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='base.branchemployee')),
                ('sales_employee_id', models.ForeignKey(blank=True, db_column='Sales Employee ID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='base.algobullsemployee')),
            ],
            options={
                'db_table': 'Sales',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Support',
            fields=[
                ('ticket_number', models.TextField(db_column='Ticket Number', primary_key=True, serialize=False)),
                ('date', models.TextField(blank=True, db_column='Date', null=True)),
                ('broking_id', models.TextField(blank=True, db_column='Broking ID', null=True)),
                ('name', models.TextField(blank=True, db_column='Name', null=True)),
                ('contact_number', models.TextField(blank=True, db_column='Contact Number', null=True)),
                ('email_id', models.TextField(blank=True, db_column='Email ID', null=True)),
                ('date_of_error', models.TextField(blank=True, db_column='Date Of Error', null=True)),
                ('strategy_code', models.TextField(blank=True, db_column='Strategy Code', null=True)),
                ('strategy_instrument', models.TextField(blank=True, db_column='Strategy Instrument', null=True)),
                ('customer_type', models.TextField(blank=True, db_column='Customer Type', null=True)),
                ('priority', models.TextField(blank=True, db_column='Priority', null=True)),
                ('issue', models.TextField(blank=True, db_column='Issue', null=True)),
                ('comment', models.TextField(blank=True, db_column='Comment', null=True)),
                ('support_employee', models.TextField(blank=True, db_column='Support Employee', null=True)),
                ('division_employee', models.TextField(blank=True, db_column='Division Employee', null=True)),
                ('status', models.TextField(blank=True, db_column='Status', null=True)),
                ('date_of_closing', models.TextField(blank=True, db_column='Date of Closing', null=True)),
                ('branch_employee_id', models.ForeignKey(blank=True, db_column='Branch Employee ID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='base.branchemployee')),
            ],
            options={
                'db_table': 'Support',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TechTask',
            fields=[
                ('task_id', models.TextField(db_column='Task ID', primary_key=True, serialize=False)),
                ('date', models.TextField(blank=True, db_column='Date', null=True)),
                ('task', models.TextField(blank=True, db_column='Task', null=True)),
                ('nature', models.TextField(blank=True, db_column='Nature', null=True)),
                ('task_status', models.TextField(blank=True, db_column='Task Status', null=True)),
                ('priority', models.TextField(blank=True, db_column='Priority', null=True)),
                ('date_of_closing', models.TextField(blank=True, db_column='Date of Closing', null=True)),
                ('number_of_days', models.TextField(blank=True, db_column='Number Of Days', null=True)),
                ('comments', models.TextField(blank=True, db_column='Comments', null=True)),
                ('employee_id', models.ForeignKey(blank=True, db_column='Employee ID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='base.algobullsemployee')),
            ],
            options={
                'db_table': 'Tech Task',
                'managed': True,
            },
        ),
    ]
